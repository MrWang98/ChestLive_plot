import xlrd
from xlrd import xldate_as_tuple
import os
from plotly.offline import download_plotlyjs, init_notebook_mode, plot
import plotly.graph_objs as go
from plotly.graph_objs import Scatter
from plotly.graph_objects import Line
import plotly as py
from datetime import datetime
import scipy.io as scio
from plotly.subplots import make_subplots
import numpy as np
import pandas as pd
import plotly.express as px
import plotly.figure_factory as ff
pyplot = py.offline.plot
#colorscale =[[0, 'rgb(239, 241, 254)'], [0.5, 'rgb(188, 194, 215'], [1.0, 'rgb(140, 139, 170)']]
colorscale = [[0, '#D3E9F8'], [1, '#1D7FC0']]
#colorscale = [[0, 'rgb(196, 218, 230)'], [1, 'rgb(146, 200, 224)']]
font_colors = ['white', 'pink']
z=[[99.67,0.00, 0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.33,0.00],
                      [0.00,97.67,0.00,0.00,0.00,0.00,0.00,0.00,1.00,0.00,0.00,1.00,0.33,0.00,0.00],
                      [0.00,0.00,100.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00],
                       [0.00,0.00,0.00,	99.67,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.33,],
                       [0,0.0,0,0.0,100,0.0,0.0,0.0,0.0,0.0,0],
                       [0.0,0.0,0,0.0,0.0,98.5,0.0,0.5,1.0,0.0,0],
                       [0.0,0.0,0.0,0.0,0.0,0.0,98.5,0.0,0.0,0.0,1.5],
                       [0.0,0.0,0.0,0,0.5,0.0,0.0,98.5,1,0.0,0],
                       [0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.5,99.5,0.0,0],
                       [0.0,0.0,0.0,0,0,0.0,0,0.0,0.0,100,0],
   [0.0,0.0,0.0,0.5,0,0.0,1.0,0.0,0.0,1.0,97.5]]

fig = go.Figure(data=go.Heatmap(z=[[99.67,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.33,	0.00,],
    [0.00,	97.67,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	1.00,	0.00,	0.00,	1.00,	0.33,	0.00,	0.00,],
    [0.00,	0.00,	100.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	99.67,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.33,],
    [0.00,	0.00,	0.00,	0.00,	99.67,	0.00,	0.33,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	99.67,	0.00,	0.33,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	100.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	99.00,	0.33,	0.67,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	0.33,	0.00,	0.00,	0.00,	0.00,	99.00,	0.67,	0.00,	0.00,	0.00,	0.00,	0.00,],
    [0.33,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	98.67,	0.00,	0.33,	0.33,	0.33,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	99.67,	0.33,	0.00,	0.00,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	97.00,	2.00,	1.00,	0.00,],
    [0.00,	0.33,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.33,	0.00,	1.33,	97.00,	1.00,	0.00,],
    [0.67,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	1.00,	98.33,	0.00,],
    [0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	0.00,	1.33,	0.00,	0.00,	0.00,	0.00,	0.00,	98.67,]],
    x=['U1','U2','U3','U4','U5','U6','U7','U8','U9','U10','U11','U12','U13','U14','U15'],
    y=['U1','U2','U3','U4','U5','U6','U7','U8','U9','U10','U11','U12','U13','U14','U15'],
     colorscale=colorscale))
fig['layout'].update(
height=620 ,width = 730,
font=dict(
family="Time New Roman",  # 所有标题文字的字体
size = 19 , # 所有标题文字的大小 27
))
fig["layout"]["yaxis"].update({"title": "Predict Result","titlefont": {"size": 32}})
fig["layout"]["xaxis"].update({"title": "Ground Truth","titlefont": {"size": 32}})
html_path = "../htmls/ConfusionMatrix.html"
fig.write_image('../images/ConfusionMatrix.eps')
pyplot(fig,filename=html_path)

#x=['OuRunMin',	'QinDang'	,'WuYuan',	'WZY',	'XueMeng',	'XZQ',	'ZCY',	'ZhuTianLin',	'ZhuXiaoTian',	'ZJ'
#],
 #   y=['OuRunMin', 'QinDang', 'WuYuan', 'WZY', 'XueMeng', 'XZQ', 'ZCY', 'ZhuTianLin', 'ZhuXiaoTian', 'ZJ'
  #     ]
#)